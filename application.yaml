- name: Webapplication with database
  hosts:
    - localhost

  gather_facts: yes

  vars:
    db_cont: database
    app_cont: application_instance
    nginx_cont: nginx
    doc_image: ansible_clear_image
    net_name: new_net
  tasks:
    - name: Build image of Ubuntu
      docker_image:
        name: "{{ doc_image }}"
        path: ./build
        dockerfile: Dockerfile
        state: present

    - name: Create a Docker network
      docker_network:
        name: "{{ net_name }}"
        ipam_options:
          subnet: "172.17.0.1/16"

    - name: Running of database
      docker_container:
        image: "{{ doc_image }}"
        name: "{{ db_cont }}"
        state: started
        exposed_ports: 3306
        networks:
          - name: "{{ net_name }}"
            ipv4_address: "172.17.0.2"

    - name: Running of database
      docker_container:
        image: "{{ doc_image }}"
        name: "{{ app_cont }}"
        state: started
        exposed_ports: 8000
        networks:
          - name: "{{ net_name }}"
            ipv4_address: "172.17.0.3"

    - name: Running of database
      docker_container:
        image: "{{ doc_image }}"
        name: "{{ nginx_cont }}"
        state: started
        exposed_ports: 80
        networks:
          - name: "{{ net_name }}"
            ipv4_address: "172.17.0.4"

- name: Create database
  hosts:
    - db

  gather_facts: no

  tasks:
    - name: Update of packages
      shell: apt update

    - name: Install mysql-server
      apt:
        name: mysql-server
        state: present
      ignore_errors: yes

    - name: Enable mysql
      service:
        name: mysql
        state: started

    - name: Install pymysql
      pip:
        name: pymysql
        state: present

    - name: Create database
      mysql_db:
        name: blog_data
        state: present

    - name: New User
      mysql_user:
        name: djangouser
        host: "%"
        password: pepega
        priv: 'blog_data.*:ALL'
        state: present

- name: Provision environment
  hosts:
    - application

  gather_facts: no

  tasks:
    - name: Instalation all packages
      shell:
        apt update && apt -y upgrade
      shell:
        apt install -y python3 \
        python3-pip \
        build-essential \
        libssl-dev \
        libffi-dev \
        python3-dev \
        python3-venv \
        libmysqlclient-dev \
        default-libmysqlclient-dev

    - name: Create directory
      file:
        path: ~/blog_app
        state: directory

    #- name: Create invironment for python
      #shell: python3 -m venv env
      #shell: . env/bin/activate

      #args:
        #creates: ~/blog_app
        #chdir: ~/blog_app

    - name: Install module
      pip:
        name: django
        state: present

    - name: Create new project
      shell: django-admin startproject blog
      args:
        chdir: ~/blog_app
      ignore_errors: yes

    - name: Set up settings
      copy:
        src: settings.py
        dest: ~/blog_app/blog/blog/settings.py

    - name: Install mysql client
      pip:
        name: mysqlclient
        state: present

    - name: Change config
      copy:
        src: my.cnf
        dest: /etc/mysql/my.cnf

    - name: Run application
      shell: python3 manage.py migrate
      args:
        chdir: ~/blog_app/blog/

    - name: Run server
      shell: python3 manage.py runserver 127.0.0.1:8000 &
      args:
        chdir: ~/blog_app/blog/

    #- name: Check link
      #uri:
        #url: http://127.0.0.1:8000/

- name: Restart mysql
  hosts: db
  tasks:
    - name: Restart
      service:
        name: mysql
        state: restarted

- name: Create nginx
  hosts: nginx
  gather_facts: no

  tasks:
    - name: Install Nginx
      package:
        name: nginx
        state: present

    - name: Start Nginx
      service:
        name: nginx
        state: started

    - name: Set up settings
      copy:
        src: default.conf
        dest: /etc/nginx/conf.d/default.conf
